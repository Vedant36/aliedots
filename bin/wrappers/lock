#!/usr/bin/env bash
# TODO: complete update() in the script or replace the whole thing with slock
# Original Author : Pavan Jadhaw
# Github Profile : https://github.com/pavanjadhaw
# Project Repository : https://github.com/pavanjadhaw/betterlockscreen
# Commit: 82d1a72
# Modified by : Vedant36

primary=#ffffffff
secondary=#2460A3ff
# Configurable settings
insidecolor=#a9b1d600
ringcolor=$primary
keyhlcolor=$secondary
bshlcolor=$secondary
separatorcolor=$secondary
insidevercolor=$secondary
insidewrongcolor=$secondary
ringvercolor=$primary
ringwrongcolor=$primary
verifcolor=$primary
timecolor=$primary
datecolor=$primary

font="iosevka mayukai codepro"
locktext="100 seconds to midnight"
time_format='%H:%M:%S'
converted="$HOME"/pix/lockscreen

lock() {
	mpc -q pause
	pkill xdotool
	dunstctl set-paused true

	# feels like slock is better anyway
	# are you crazy? it's literally blank. stop sucklessing
	# slock
	i3lock \
		--nofork \
		--ignore-empty-password \
		--color=00000000 \
		-t --image="$converted" \
		--time-pos='x+110:h-70' \
		--date-pos='x+43:h-45' \
		--clock --date-align 1 --date-str "$locktext" --time-str "$time_format" \
		--inside-color="$insidecolor" --ring-color="$ringcolor" --line-uses-inside \
		--keyhl-color="$keyhlcolor" --bshl-color="$bshlcolor" --separator-color="$separatorcolor" \
		--insidever-color="$insidevercolor" --insidewrong-color="$insidewrongcolor" \
		--ringver-color="$ringvercolor" --ringwrong-color="$ringwrongcolor" --ind-pos='x+280:h-70' \
		--radius=20 --ring-width=4 --verif-text='' --wrong-text='' \
		--verif-color="$verifcolor" --time-color="$timecolor" --date-color="$datecolor" \
		--time-font="$font" --date-font="$font" --layout-font="$font" --verif-font="$font" --wrong-font="$font" \
		--noinput-text='' --force-clock --pass-media-keys \
		--bar-step 5

	dunstctl set-paused false
	bat_alert.sh
	restart-bar
	event
}

update() {
	# DONTUSE: incomplete
    work_dir="$XDG_CACHE_HOME"/alie
	converted="$XDG_CACHE_HOME"/alie/"$(basename ${1%.*}.jpg)"
    # [ -d "$work_dir" ] || \
    #     [ "$(stat -c '%Y' "$converted")" -gt "$(stat -c '%Y' "$1")" ] && return
	mkdir -p "$XDG_CACHE_HOME"/alie/
	res=$(xdpyinfo | grep -Po 'dimensions:\s*\K\d+x\d+')

	# resize and blur image
	convert "$1" -resize "$res""^" -gravity center -extent "$res" -blur 4x4 "$converted"
	echo "New image at: $converted"
}

case "$1" in
	-u|--update)
		update "$2"
		;;
	*)
		lock
		;;
esac
# vim: noet
