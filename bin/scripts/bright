#!/usr/bin/env sh
## Dependencies: need to able to edit brightness
##  ^Refer to: lib/root/etc/udev/rules.d/backlight.rules
## TODO: add way to decrease gamma using xrandr for lower lit environments

# SYSTEM_DEPENDENT: the backlight folder might be different
BACKLIGHT="/sys/class/backlight/amdgpu_bl0"
MAX_BRIGHTNESS=$(cat $BACKLIGHT/max_brightness)
BRIGHTNESS=$(cat $BACKLIGHT/brightness)

help() {
	cat<<EOF
Usage: $(basename "$0") [-h|-i|-p|-r|-ri] VALUE
Sets the brightness in percentage by default

Options:
  -h   Display this help
  -i   Increment instead of set
  -p   Just print the current brightness in percentage
  -r   Set brightness to a raw value
  -ri  Increment in raw value

Values passed for incrementing can be negative
Current brightness: $((100 * BRIGHTNESS / MAX_BRIGHTNESS))%
Raw brightness: $BRIGHTNESS / $MAX_BRIGHTNESS
EOF
}

# handle commandline options
p=1 # percentage and no increment by default
i=''
case $1 in
	-h|--help) help; exit ;;
	-i) i=1 p=1; shift ;;
	-r) p=''; shift ;;
	-ri) p='' i=1; shift ;;
	-p) echo $((100 * BRIGHTNESS / MAX_BRIGHTNESS)); exit ;;
esac

# check for bad input
case $1 in
	[0-9]*) ;;
	-[0-9]*) ;;
	'') help; exit ;;
	*)
		echo "Invalid argument: '$1'" >&2
		help
		exit 1
		;;
esac

new="$1"
[ "$p" ] && new="$((new * MAX_BRIGHTNESS / 100))"
[ "$i" ] && new="$((new + BRIGHTNESS))"
[ "$new" -lt 0 ] && new=0
[ "$new" -gt "$MAX_BRIGHTNESS" ] && new=$MAX_BRIGHTNESS
echo "$new" > $BACKLIGHT/brightness
# vim: noet
